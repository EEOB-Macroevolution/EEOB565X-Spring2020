T <- readTrees("data/primates_tree.nex")[1]
data <- readCharacterData("data/primates_activity_period.nex")
taxa <- T.taxa()
num_taxa <- T.ntips()
mvi = 1
mni = 1
NUM_STATES = 2
rate_mean <- abs( ln(367.0/2.0) / T.rootAge() )
for (i in 1:NUM_STATES) {
    
speciation[i] ~ dnExponential( 1.0 / rate_mean )
moves[mvi++] = mvSlide(speciation[i], delta=0.20, tune=true, weight=3.0)
extinction[i] ~ dnExponential( 1.0 / rate_mean )
moves[mvi++] = mvSlide(extinction[i], delta=0.20, tune=true, weight=3.0)
diversification[i] := speciation[i] - extinction[i]
}
speciation
rate_pr := T.treeLength() / 10
rate_12 ~ dnExponential(rate_pr)
rate_21 ~ dnExponential(rate_pr)
moves[mvi++] = mvScale( rate_12, weight=2 )
moves[mvi++] = mvScale( rate_21, weight=2 )
rate_matrix := fnFreeBinary( [rate_12, rate_21], rescaled=false)
rate_cat_probs ~ dnDirichlet( rep(1, NUM_STATES) )
moves[mvi++] = mvDirichletSimplex(rate_cat_probs, tune=true, weight=2)
sampling <- num_taxa / 367
root_age <- T.rootAge()
timetree ~ dnCDBDP( rootAge           = root_age,
                    speciationRates   = speciation,
                    extinctionRates   = extinction, 
                    Q                 = rate_matrix,
                    pi                = rate_cat_probs,
                    rho               = sampling,
                    condition         = "survival" )
timetree.clamp( T )
timetree.clampCharData( data )
mymodel = model(rate_matrix)
monitors[mni++] = mnModel(filename="output/primates_activTime_BiSSE_mcmc.log", printgen=10)
monitors[mni++] = mnScreen(printgen=100, rate_12, rate_21, speciation, extinction)
mymcmc = mcmc(mymodel, monitors, moves)
mymcmc.burnin(generations=3000, tuningInterval=200)
mymcmc.run(generations=10000)
q()
